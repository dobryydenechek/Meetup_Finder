# Generated by Django 3.0.4 on 2020-03-23 11:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventlist',
            fields=[
                ('el_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('el_title', models.CharField(max_length=50, verbose_name='Название мероприятия')),
                ('el_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Описание')),
                ('el_date', models.DateTimeField(verbose_name='Дата')),
                ('el_time', models.TimeField()),
                ('el_link', models.CharField(max_length=100, verbose_name='Ссылка на сайт мероприятия')),
                ('el_chk_active', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'db_table': 'eventlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventtaglist',
            fields=[
                ('etl_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Тэг мероприятия',
                'verbose_name_plural': 'Тэги мероприятия',
                'db_table': 'eventtaglist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Placelist',
            fields=[
                ('pl_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('pl_city', models.CharField(max_length=30, verbose_name='Город')),
                ('pl_str_name', models.CharField(max_length=30, verbose_name='Улица')),
                ('pl_house_num', models.IntegerField(verbose_name='Номер дома')),
                ('pl_letter', models.CharField(blank=True, max_length=1, null=True, verbose_name='Буква дома')),
                ('pl_place_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Название места проведения')),
            ],
            options={
                'verbose_name': 'Место проведения',
                'verbose_name_plural': 'Места проведения',
                'db_table': 'placelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taglist',
            fields=[
                ('tl_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('tl_title', models.CharField(max_length=15, verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'db_table': 'taglist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userlist',
            fields=[
                ('ul_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('ul_login', models.CharField(max_length=20, verbose_name='Логин')),
                ('ul_password', models.CharField(max_length=20, verbose_name='Пароль')),
                ('ul_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('ul_surname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия')),
                ('ul_secondname', models.CharField(blank=True, max_length=20, null=True)),
                ('ul_email', models.CharField(max_length=30, verbose_name='E-mail')),
                ('ul_linkvkmessage', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ссылка на вк')),
                ('ul_linktgmessage', models.CharField(blank=True, max_length=30, null=True, verbose_name='ID чата в телеграм')),
                ('ul_chk_mailing', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'userlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usertaglist',
            fields=[
                ('utl_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Тэг пользователя',
                'verbose_name_plural': 'Тэги пользователя',
                'db_table': 'usertaglist',
                'managed': False,
            },
        ),
    ]
